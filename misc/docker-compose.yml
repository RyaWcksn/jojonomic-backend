version: '3'
services:
  postgres:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=engineerone
      - POSTGRES_PASSWORD=p4ssw0rd1
      - POSTGRES_DB=jojonomic_gold
    ports:
      - '5432:5432'
    volumes: 
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/data:/var/lib/postgresql/data
    networks:
      - default-network

  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.4
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - default-network

  kafka:
    image: confluentinc/cp-kafka:5.3.1
    ports:
      - 9093:9093
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      JMX_PORT: 9998
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka1 -Dcom.sun.management.jmxremote.rmi.port=9998
    depends_on:
      - zookeeper 
    networks:
      - default-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181 
    depends_on:
      - zookeeper  
      - kafka
    networks:
      - default-network

  ### Microservices
  input-harga-service:
    build: 
      context: ../microservices/input-harga-service
      dockerfile: Dockerfile
    ports:
      - "7001:7001"
    restart: always
    environment:
      ENV: dev
      SERVICE: input-harga
      LOG_LEVEL: debug
      HOST: 0.0.0.0
      PORT: 7001
      KAFKA_ADDR: kafka:29092
      KAFKA_TOPIC: input-harga
    depends_on:
      - zookeeper  
      - kafka
    networks:
      - default-network

  input-harga-storage:
    build: 
      context: ../microservices/input-harga-storage
      dockerfile: Dockerfile
    restart: always
    environment:
      ENV: dev
      SERVICE: input-harga-storage
      LOG_LEVEL: debug
      HOST: 0.0.0.0
      PORT: 7001
      KAFKA_ADDR: kafka:29092
      KAFKA_TOPIC: input-harga
      SQL_ADDR: postgres
      SQL_PORT: 5432
      SQL_USER: engineerone
      SQL_PASS: p4ssw0rd1
      SQL_DB: jojonomic_gold
      SQL_MAX_CONN: 10
      SQL_MAX_OPEN: 10
    depends_on:
      - zookeeper  
      - kafka
      - postgres
    networks:
      - default-network

  check-harga-service:
    build: 
      context: ../microservices/check-harga-service
      dockerfile: Dockerfile
    ports:
      - "7002:7002"
    restart: always
    environment:
      ENV: dev
      SERVICE: check-harga-service
      LOG_LEVEL: debug
      HOST: 0.0.0.0
      PORT: 7002
      KAFKA_ADDR: kafka:29092
      KAFKA_TOPIC: input-harga
      SQL_ADDR: postgres
      SQL_PORT: 5432
      SQL_USER: engineerone
      SQL_PASS: p4ssw0rd1
      SQL_DB: jojonomic_gold
      SQL_MAX_CONN: 10
      SQL_MAX_OPEN: 10
    depends_on:
      - zookeeper  
      - kafka
      - postgres
    networks:
      - default-network

  topup-service:
    build: 
      context: ../microservices/topup-service
      dockerfile: Dockerfile
    ports:
      - "7003:7003"
    restart: always
    environment:
      ENV: dev
      SERVICE: topup
      LOG_LEVEL: debug
      HOST: 0.0.0.0
      PORT: 7003
      PRICE_ADDR: check-harga-service:7002
      KAFKA_ADDR: kafka:29092
      KAFKA_TOPIC: topup
    depends_on:
      - zookeeper  
      - kafka
      - check-harga-service
    networks:
      - default-network


  topup-storage:
    build: 
      context: ../microservices/topup-storage
      dockerfile: Dockerfile
    restart: always
    environment:
      ENV: dev
      SERVICE: topup-storage
      LOG_LEVEL: debug
      HOST: 0.0.0.0
      PORT: 7001
      KAFKA_ADDR: kafka:29092
      KAFKA_TOPIC: topup
      SALDO_ADDR: http://check-saldo-service:7004
      SQL_ADDR: postgres
      SQL_PORT: 5432
      SQL_USER: engineerone
      SQL_PASS: p4ssw0rd1
      SQL_DB: jojonomic_gold
      SQL_MAX_CONN: 10
      SQL_MAX_OPEN: 10
    depends_on:
      - zookeeper  
      - kafka
      - postgres
      - check-saldo-service
    networks:
      - default-network


  check-saldo-service:
    build: 
      context: ../microservices/check-saldo-service
      dockerfile: Dockerfile
    ports:
      - "7004:7004"
    restart: always
    environment:
      ENV: dev
      SERVICE: check-saldo-service
      LOG_LEVEL: debug
      HOST: 0.0.0.0
      PORT: 7004
      KAFKA_ADDR: kafka:29092
      KAFKA_TOPIC: input-harga
      SQL_ADDR: postgres
      SQL_PORT: 5432
      SQL_USER: engineerone
      SQL_PASS: p4ssw0rd1
      SQL_DB: jojonomic_gold
      SQL_MAX_CONN: 10
      SQL_MAX_OPEN: 10
    depends_on:
      - zookeeper  
      - kafka
      - postgres
    networks:
      - default-network

  check-mutasi-service:
    build: 
      context: ../microservices/mutation-service
      dockerfile: Dockerfile
    ports:
      - "7005:7005"
    restart: always
    environment:
      ENV: dev
      SERVICE: check-mutasi-service
      LOG_LEVEL: debug
      HOST: 0.0.0.0
      PORT: 7005
      KAFKA_ADDR: kafka:29092
      KAFKA_TOPIC: input-harga
      SQL_ADDR: postgres
      SQL_PORT: 5432
      SQL_USER: engineerone
      SQL_PASS: p4ssw0rd1
      SQL_DB: jojonomic_gold
      SQL_MAX_CONN: 10
      SQL_MAX_OPEN: 10
    depends_on:
      - zookeeper  
      - kafka
      - postgres
    networks:
      - default-network

  buyback-service:
    build: 
      context: ../microservices/buyback-service
      dockerfile: Dockerfile
    ports:
      - "7006:7006"
    restart: always
    environment:
      ENV: dev
      SERVICE: buyback
      LOG_LEVEL: debug
      HOST: 0.0.0.0
      PORT: 7006
      PRICE_ADDR: http://check-harga-service:7002
      SALDO_ADDR: http://check-saldo-service:7004
      KAFKA_ADDR: kafka:29092
      KAFKA_TOPIC: buyback
    depends_on:
      - zookeeper  
      - kafka
      - check-harga-service
      - check-saldo-service
    networks:
      - default-network

networks:
  default-network:
