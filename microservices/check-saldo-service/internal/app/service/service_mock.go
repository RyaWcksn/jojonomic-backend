// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	storage "github.com/RyaWcksn/jojonomic-backend/check-saldo-service/internal/domain/storage"
	dto "github.com/RyaWcksn/jojonomic-backend/check-saldo-service/internal/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockIService is a mock of IService interface.
type MockIService struct {
	ctrl     *gomock.Controller
	recorder *MockIServiceMockRecorder
}

// MockIServiceMockRecorder is the mock recorder for MockIService.
type MockIServiceMockRecorder struct {
	mock *MockIService
}

// NewMockIService creates a new mock instance.
func NewMockIService(ctrl *gomock.Controller) *MockIService {
	mock := &MockIService{ctrl: ctrl}
	mock.recorder = &MockIServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIService) EXPECT() *MockIServiceMockRecorder {
	return m.recorder
}

// FetchSaldo mocks base method.
func (m *MockIService) FetchSaldo(ctx context.Context, payload *dto.CheckSaldoReq) (*storage.StorageEntityRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchSaldo", ctx, payload)
	ret0, _ := ret[0].(*storage.StorageEntityRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchSaldo indicates an expected call of FetchSaldo.
func (mr *MockIServiceMockRecorder) FetchSaldo(ctx, payload interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchSaldo", reflect.TypeOf((*MockIService)(nil).FetchSaldo), ctx, payload)
}
